<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos/Networking/Responses/GymFeedPokemonResponse.proto
 */


namespace POGOProtos\Networking\Responses;

/**
 * Protobuf message : POGOProtos.Networking.Responses.GymFeedPokemonResponse
 */
class GymFeedPokemonResponse extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * result optional enum = 1
     *
     * @var \POGOProtos\Networking\Responses\GymFeedPokemonResponse\Result
     */
    protected $result = null;

    /**
     * gym_status_and_defenders optional message = 2
     *
     * @var \POGOProtos\Data\Gym\GymStatusAndDefenders
     */
    protected $gym_status_and_defenders = null;

    /**
     * awarded_gym_badge optional message = 3
     *
     * @var \POGOProtos\Data\Badge\AwardedGymBadge
     */
    protected $awarded_gym_badge = null;

    /**
     * stardust_awarded optional int32 = 4
     *
     * @var int
     */
    protected $stardust_awarded = null;

    /**
     * xp_awarded optional int32 = 5
     *
     * @var int
     */
    protected $xp_awarded = null;

    /**
     * num_candy_awarded optional int32 = 6
     *
     * @var int
     */
    protected $num_candy_awarded = null;

    /**
     * family_candy_id optional enum = 7
     *
     * @var \POGOProtos\Enums\PokemonFamilyId
     */
    protected $family_candy_id = null;

    /**
     * cooldown_complete optional int64 = 8
     *
     * @var int
     */
    protected $cooldown_complete = null;

    /**
     * Check if 'result' has a value
     *
     * @return bool
     */
    public function hasResult()
    {
        return $this->result !== null;
    }

    /**
     * Get 'result' value
     *
     * @return \POGOProtos\Networking\Responses\GymFeedPokemonResponse\Result
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * Set 'result' value
     *
     * @param \POGOProtos\Networking\Responses\GymFeedPokemonResponse\Result $value
     */
    public function setResult(\POGOProtos\Networking\Responses\GymFeedPokemonResponse\Result $value = null)
    {
        $this->result = $value;
    }

    /**
     * Check if 'gym_status_and_defenders' has a value
     *
     * @return bool
     */
    public function hasGymStatusAndDefenders()
    {
        return $this->gym_status_and_defenders !== null;
    }

    /**
     * Get 'gym_status_and_defenders' value
     *
     * @return \POGOProtos\Data\Gym\GymStatusAndDefenders
     */
    public function getGymStatusAndDefenders()
    {
        return $this->gym_status_and_defenders;
    }

    /**
     * Set 'gym_status_and_defenders' value
     *
     * @param \POGOProtos\Data\Gym\GymStatusAndDefenders $value
     */
    public function setGymStatusAndDefenders(\POGOProtos\Data\Gym\GymStatusAndDefenders $value = null)
    {
        $this->gym_status_and_defenders = $value;
    }

    /**
     * Check if 'awarded_gym_badge' has a value
     *
     * @return bool
     */
    public function hasAwardedGymBadge()
    {
        return $this->awarded_gym_badge !== null;
    }

    /**
     * Get 'awarded_gym_badge' value
     *
     * @return \POGOProtos\Data\Badge\AwardedGymBadge
     */
    public function getAwardedGymBadge()
    {
        return $this->awarded_gym_badge;
    }

    /**
     * Set 'awarded_gym_badge' value
     *
     * @param \POGOProtos\Data\Badge\AwardedGymBadge $value
     */
    public function setAwardedGymBadge(\POGOProtos\Data\Badge\AwardedGymBadge $value = null)
    {
        $this->awarded_gym_badge = $value;
    }

    /**
     * Check if 'stardust_awarded' has a value
     *
     * @return bool
     */
    public function hasStardustAwarded()
    {
        return $this->stardust_awarded !== null;
    }

    /**
     * Get 'stardust_awarded' value
     *
     * @return int
     */
    public function getStardustAwarded()
    {
        return $this->stardust_awarded;
    }

    /**
     * Set 'stardust_awarded' value
     *
     * @param int $value
     */
    public function setStardustAwarded($value = null)
    {
        $this->stardust_awarded = $value;
    }

    /**
     * Check if 'xp_awarded' has a value
     *
     * @return bool
     */
    public function hasXpAwarded()
    {
        return $this->xp_awarded !== null;
    }

    /**
     * Get 'xp_awarded' value
     *
     * @return int
     */
    public function getXpAwarded()
    {
        return $this->xp_awarded;
    }

    /**
     * Set 'xp_awarded' value
     *
     * @param int $value
     */
    public function setXpAwarded($value = null)
    {
        $this->xp_awarded = $value;
    }

    /**
     * Check if 'num_candy_awarded' has a value
     *
     * @return bool
     */
    public function hasNumCandyAwarded()
    {
        return $this->num_candy_awarded !== null;
    }

    /**
     * Get 'num_candy_awarded' value
     *
     * @return int
     */
    public function getNumCandyAwarded()
    {
        return $this->num_candy_awarded;
    }

    /**
     * Set 'num_candy_awarded' value
     *
     * @param int $value
     */
    public function setNumCandyAwarded($value = null)
    {
        $this->num_candy_awarded = $value;
    }

    /**
     * Check if 'family_candy_id' has a value
     *
     * @return bool
     */
    public function hasFamilyCandyId()
    {
        return $this->family_candy_id !== null;
    }

    /**
     * Get 'family_candy_id' value
     *
     * @return \POGOProtos\Enums\PokemonFamilyId
     */
    public function getFamilyCandyId()
    {
        return $this->family_candy_id;
    }

    /**
     * Set 'family_candy_id' value
     *
     * @param \POGOProtos\Enums\PokemonFamilyId $value
     */
    public function setFamilyCandyId(\POGOProtos\Enums\PokemonFamilyId $value = null)
    {
        $this->family_candy_id = $value;
    }

    /**
     * Check if 'cooldown_complete' has a value
     *
     * @return bool
     */
    public function hasCooldownComplete()
    {
        return $this->cooldown_complete !== null;
    }

    /**
     * Get 'cooldown_complete' value
     *
     * @return int
     */
    public function getCooldownComplete()
    {
        return $this->cooldown_complete;
    }

    /**
     * Set 'cooldown_complete' value
     *
     * @param int $value
     */
    public function setCooldownComplete($value = null)
    {
        $this->cooldown_complete = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'result' => null,
            'gym_status_and_defenders' => null,
            'awarded_gym_badge' => null,
            'stardust_awarded' => null,
            'xp_awarded' => null,
            'num_candy_awarded' => null,
            'family_candy_id' => null,
            'cooldown_complete' => null
        ], $values);

        $message->setResult($values['result']);
        $message->setGymStatusAndDefenders($values['gym_status_and_defenders']);
        $message->setAwardedGymBadge($values['awarded_gym_badge']);
        $message->setStardustAwarded($values['stardust_awarded']);
        $message->setXpAwarded($values['xp_awarded']);
        $message->setNumCandyAwarded($values['num_candy_awarded']);
        $message->setFamilyCandyId($values['family_candy_id']);
        $message->setCooldownComplete($values['cooldown_complete']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'GymFeedPokemonResponse',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'result',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Networking.Responses.GymFeedPokemonResponse.Result'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'gym_status_and_defenders',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Gym.GymStatusAndDefenders'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'awarded_gym_badge',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Badge.AwardedGymBadge'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'stardust_awarded',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'xp_awarded',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'num_candy_awarded',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'family_candy_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Enums.PokemonFamilyId'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'cooldown_complete',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->result !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->result->value());
        }

        if ($this->gym_status_and_defenders !== null) {
            $writer->writeVarint($stream, 18);
            $writer->writeVarint($stream, $this->gym_status_and_defenders->serializedSize($sizeContext));
            $this->gym_status_and_defenders->writeTo($context);
        }

        if ($this->awarded_gym_badge !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeVarint($stream, $this->awarded_gym_badge->serializedSize($sizeContext));
            $this->awarded_gym_badge->writeTo($context);
        }

        if ($this->stardust_awarded !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeVarint($stream, $this->stardust_awarded);
        }

        if ($this->xp_awarded !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->xp_awarded);
        }

        if ($this->num_candy_awarded !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->num_candy_awarded);
        }

        if ($this->family_candy_id !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->family_candy_id->value());
        }

        if ($this->cooldown_complete !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeVarint($stream, $this->cooldown_complete);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->result = \POGOProtos\Networking\Responses\GymFeedPokemonResponse\Result::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Gym\GymStatusAndDefenders();

                $this->gym_status_and_defenders = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Badge\AwardedGymBadge();

                $this->awarded_gym_badge = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->stardust_awarded = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->xp_awarded = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->num_candy_awarded = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->family_candy_id = \POGOProtos\Enums\PokemonFamilyId::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->cooldown_complete = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->result !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->result->value());
        }

        if ($this->gym_status_and_defenders !== null) {
            $innerSize = $this->gym_status_and_defenders->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->awarded_gym_badge !== null) {
            $innerSize = $this->awarded_gym_badge->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->stardust_awarded !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->stardust_awarded);
        }

        if ($this->xp_awarded !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->xp_awarded);
        }

        if ($this->num_candy_awarded !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->num_candy_awarded);
        }

        if ($this->family_candy_id !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->family_candy_id->value());
        }

        if ($this->cooldown_complete !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->cooldown_complete);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->result = null;
        $this->gym_status_and_defenders = null;
        $this->awarded_gym_badge = null;
        $this->stardust_awarded = null;
        $this->xp_awarded = null;
        $this->num_candy_awarded = null;
        $this->family_candy_id = null;
        $this->cooldown_complete = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Networking\Responses\GymFeedPokemonResponse) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->result = ($message->result !== null) ? $message->result : $this->result;
        $this->gym_status_and_defenders = ($message->gym_status_and_defenders !== null) ? $message->gym_status_and_defenders : $this->gym_status_and_defenders;
        $this->awarded_gym_badge = ($message->awarded_gym_badge !== null) ? $message->awarded_gym_badge : $this->awarded_gym_badge;
        $this->stardust_awarded = ($message->stardust_awarded !== null) ? $message->stardust_awarded : $this->stardust_awarded;
        $this->xp_awarded = ($message->xp_awarded !== null) ? $message->xp_awarded : $this->xp_awarded;
        $this->num_candy_awarded = ($message->num_candy_awarded !== null) ? $message->num_candy_awarded : $this->num_candy_awarded;
        $this->family_candy_id = ($message->family_candy_id !== null) ? $message->family_candy_id : $this->family_candy_id;
        $this->cooldown_complete = ($message->cooldown_complete !== null) ? $message->cooldown_complete : $this->cooldown_complete;
    }


}

